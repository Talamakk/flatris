trigger:
  branches:
    include:
      - master
 
variables:
 
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'DeploymentTestRGConnection'
  
  # Web app name
  webAppName: 'DeploymentTestApp2'
  
  # Resource group
  resourceGroupName: 'DeploymentTest'
 
  # Environment name
  environmentName: 'DeploymentTestApp2'
  
stages:
# - stage: Config
#   displayName: VM agent config stage
#   jobs:
#   - job: Config
#     displayName: Config
#     pool: AzureVMSSPool
#     steps:
#     - script: sudo apt-get -y install zip

- stage: Archive
  displayName: Archive stage
  jobs:  
  - job: Archive
    displayName: Archive
    pool: AzureVMSSPool
    steps:   
    - task: AzureAppServiceSettings@1
      displayName: 'Service Settings config'
      inputs:
        azureSubscription: $(azureSubscription)
        appName: $(webAppName)
        resourceGroupName: $(resourceGroupName)
        appSettings: |
          [
            {
              "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
              "value": "true"
            }
          ]
    - script: sudo apt-get -y install zip
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
        verbose: true
 
    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop
 
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Archive
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool: AzureVMSSPool
    strategy:
      runOnce:
        deploy:
          steps:            
          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              runtimeStack: 'NODE|18'
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip